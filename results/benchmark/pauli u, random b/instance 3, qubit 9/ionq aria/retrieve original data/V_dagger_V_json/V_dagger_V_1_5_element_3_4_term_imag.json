"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/b27ab032-7299-41b5-a493-3301af6cccd7', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=10, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-28T13:05:41.111Z', endedAt='2025-03-29T11:25:20.805Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[10] b;\\n#pragma braket verbatim\\nbox{\\ngpi2(6.28318530343497) $0;\\ngpi(6.2652668026555505) $1;\\ngpi2(4.438017753740349) $2;\\ngpi2(0.3220804329099859) $3;\\ngpi2(5.897403338349289) $4;\\ngpi(6.11318361983739) $5;\\ngpi2(5.626281328629818) $6;\\ngpi2(2.665061453870298) $7;\\ngpi(3.4282883249108744) $8;\\ngpi(1.6926292195403443) $9;\\ngpi2(1.5102922620002859) $1;\\ngpi(2.449032592175898) $3;\\ngpi(4.130481439649519) $4;\\ngpi2(1.2307929200219299) $5;\\ngpi2(0.2088272085843501) $6;\\ngpi(0.7357943767730895) $7;\\ngpi2(3.1034838299941123) $8;\\ngpi2(2.0448608883018813) $9;\\nms(6.222681241711669, 0.37732362835327216, 0.4765311167663462) $1, $7;\\nms(5.835939735755745, 6.1467810972053325, 1.2936762055575706) $2, $3;\\nms(0.7927632350911811, 4.674280160538618, 1.4597356980221772) $4, $8;\\ngpi2(5.979499636051388) $9;\\ngpi2(2.3011095288599024) $1;\\ngpi2(1.1219993351278164) $2;\\ngpi2(1.434392101813094) $3;\\ngpi2(0.7927632497580586) $4;\\nms(3.431538757482852, 5.845005194680502, 1.5707963218246732) $6, $9;\\ngpi2(4.846033926800873) $7;\\ngpi(1.205098156793074) $8;\\ngpi2(3.4149808311621914) $1;\\ngpi2(6.120032527357311) $2;\\ngpi(3.7780740450412584) $3;\\nms(3.9343558921341475, 0.1336450272923546, 0.24367869337990644) $4, $7;\\ngpi(4.013096240470814) $6;\\ngpi2(1.4786290475843031) $8;\\ngpi2(6.072082015091018) $9;\\ngpi(0.9934331136443578) $2;\\ngpi2(5.048597701213181) $4;\\ngpi2(4.572571281954969) $6;\\ngpi2(5.8208356807536) $7;\\ngpi(2.9428454473889816) $8;\\ngpi2(3.4042863802798187) $9;\\ngpi(5.582593007225358) $2;\\ngpi2(5.668296044681255) $4;\\ngpi2(3.0502710046028225) $6;\\ngpi2(0.5527060045166117) $7;\\ngpi2(6.277818984542278) $8;\\ngpi2(1.5466756374002943) $9;\\ngpi(5.180542521455497) $2;\\ngpi2(3.7171359848326793) $4;\\nms(2.977319592118994, 4.721786881089304, 0.5644678845280149) $6, $9;\\ngpi(5.152201741984464) $7;\\nms(3.4748563313890526, 3.45820652969945, 0.7853981628263407) $1, $4;\\nms(6.231612186444103, 2.7293947488906958, 0.25105472651465943) $2, $8;\\ngpi(4.587744700211877) $6;\\ngpi2(5.103853498285765) $9;\\ngpi(1.4985336944608771) $1;\\ngpi2(4.6608158558039126) $2;\\ngpi(0.017793529461053847) $4;\\ngpi2(3.400654832420854) $6;\\ngpi(1.8431523982530222) $8;\\ngpi2(5.613838416764162) $9;\\ngpi2(4.234600032324355) $1;\\ngpi2(5.378494809603793) $2;\\ngpi2(4.431362174396534) $4;\\ngpi2(0.3203970462747713) $6;\\ngpi2(2.5277064049228843) $8;\\ngpi2(4.1278084045714465) $9;\\nms(0.6661058427806359, 5.943181814304825, 1.3949905717258524) $2, $5;\\ngpi2(1.8642656238437982) $8;\\ngpi(6.1245398329030705) $2;\\ngpi(4.5423872266366505) $5;\\ngpi2(3.728992171558629) $2;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;\\nb[4] = measure $4;\\nb[5] = measure $5;\\nb[6] = measure $6;\\nb[7] = measure $7;\\nb[8] = measure $8;\\nb[9] = measure $9;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       ...,\n       [0, 0, 0, ..., 0, 1, 1],\n       [0, 0, 0, ..., 0, 1, 1],\n       [1, 1, 0, ..., 0, 1, 1]]), measured_qubits=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], measurement_counts=Counter({'1000001001': 52, '0000001001': 49, '1000011001': 41, '0000011001': 36, '0100011001': 24, '0100001001': 22, '1000001101': 22, '1100011001': 18, '0000001101': 18, '1100001001': 15, '1000000000': 14, '0000010000': 13, '0000000000': 12, '1000010000': 12, '0100011101': 11, '0100001101': 10, '1100000000': 8, '0000011101': 8, '1100011101': 8, '1000011101': 7, '0100000000': 5, '0000010100': 5, '1000010100': 5, '1010011001': 5, '1100001101': 5, '0000000100': 4, '1000001100': 4, '0000001011': 4, '0100001000': 3, '1100010100': 3, '0000011011': 3, '0010000000': 2, '1100100000': 2, '0100010000': 2, '1100010000': 2, '0000011000': 2, '1000000100': 2, '0000001100': 2, '0010011001': 2, '1110011001': 2, '1100111001': 2, '1000101101': 2, '0010011101': 2, '0000100000': 1, '0110100000': 1, '1010010000': 1, '0001010000': 1, '0000001000': 1, '1000001000': 1, '1100011000': 1, '1100000100': 1, '1110100100': 1, '0100010100': 1, '0000110100': 1, '1100001100': 1, '1001001100': 1, '0000011100': 1, '1000010010': 1, '1000000001': 1, '0100000001': 1, '1000010001': 1, '1010001001': 1, '1110001001': 1, '0000101001': 1, '0100101001': 1, '0110011001': 1, '0001011001': 1, '1001011001': 1, '1011011001': 1, '0000111001': 1, '1000111001': 1, '0100111001': 1, '1000000101': 1, '1000010101': 1, '0010001101': 1, '0001001101': 1, '0000101101': 1, '0100101101': 1, '0101101101': 1, '1010011101': 1, '1110011101': 1, '0100111101': 1, '1000001011': 1, '1100001011': 1, '1100011011': 1}), measurement_probabilities={'0000000000': 0.0234375, '1000000000': 0.02734375, '0100000000': 0.009765625, '1100000000': 0.015625, '0010000000': 0.00390625, '0000100000': 0.001953125, '1100100000': 0.00390625, '0110100000': 0.001953125, '0000010000': 0.025390625, '1000010000': 0.0234375, '0100010000': 0.00390625, '1100010000': 0.00390625, '1010010000': 0.001953125, '0001010000': 0.001953125, '0000001000': 0.001953125, '1000001000': 0.001953125, '0100001000': 0.005859375, '0000011000': 0.00390625, '1100011000': 0.001953125, '0000000100': 0.0078125, '1000000100': 0.00390625, '1100000100': 0.001953125, '1110100100': 0.001953125, '0000010100': 0.009765625, '1000010100': 0.009765625, '0100010100': 0.001953125, '1100010100': 0.005859375, '0000110100': 0.001953125, '0000001100': 0.00390625, '1000001100': 0.0078125, '1100001100': 0.001953125, '1001001100': 0.001953125, '0000011100': 0.001953125, '1000010010': 0.001953125, '1000000001': 0.001953125, '0100000001': 0.001953125, '1000010001': 0.001953125, '0000001001': 0.095703125, '1000001001': 0.1015625, '0100001001': 0.04296875, '1100001001': 0.029296875, '1010001001': 0.001953125, '1110001001': 0.001953125, '0000101001': 0.001953125, '0100101001': 0.001953125, '0000011001': 0.0703125, '1000011001': 0.080078125, '0100011001': 0.046875, '1100011001': 0.03515625, '0010011001': 0.00390625, '1010011001': 0.009765625, '0110011001': 0.001953125, '1110011001': 0.00390625, '0001011001': 0.001953125, '1001011001': 0.001953125, '1011011001': 0.001953125, '0000111001': 0.001953125, '1000111001': 0.001953125, '0100111001': 0.001953125, '1100111001': 0.00390625, '1000000101': 0.001953125, '1000010101': 0.001953125, '0000001101': 0.03515625, '1000001101': 0.04296875, '0100001101': 0.01953125, '1100001101': 0.009765625, '0010001101': 0.001953125, '0001001101': 0.001953125, '0000101101': 0.001953125, '1000101101': 0.00390625, '0100101101': 0.001953125, '0101101101': 0.001953125, '0000011101': 0.015625, '1000011101': 0.013671875, '0100011101': 0.021484375, '1100011101': 0.015625, '0010011101': 0.00390625, '1010011101': 0.001953125, '1110011101': 0.001953125, '0100111101': 0.001953125, '0000001011': 0.0078125, '1000001011': 0.001953125, '1100001011': 0.001953125, '0000011011': 0.005859375, '1100011011': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"