"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/7fc55de4-a2f0-47c5-b9ed-f6d9048d29e9', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T15:01:48.519Z', endedAt='2025-03-06T16:14:31.155Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(1.7529363314081825) $0;\\ngpi2(5.659133358958593) $1;\\ngpi(1.7717978939100136) $2;\\ngpi(0.7592394600885266) $3;\\ngpi(4.804798268904755) $1;\\ngpi(4.028994038239009) $2;\\ngpi2(5.826262978883659) $3;\\ngpi(2.21914096806037) $1;\\ngpi2(6.085188675896646) $2;\\ngpi2(5.295921745261164) $3;\\ngpi(5.563505065725501) $1;\\nms(5.926802406470642, 1.3727996953176813, 0.6240518294290779) $1, $2;\\ngpi(3.1598386734209836) $1;\\ngpi(3.859850275580299) $2;\\ngpi2(3.823510329850129) $2;\\nms(3.5054621752733577, 5.394514722916449, 1.5707963267672342) $0, $2;\\ngpi2(1.9219879159103614) $0;\\ngpi(3.174650721632203) $2;\\ngpi2(1.4137251410332996) $0;\\ngpi2(5.67092373990497) $2;\\nms(2.9714077325003845, 3.53446755467687, 1.5707963154193143) $0, $1;\\ngpi2(3.146432071866602) $2;\\ngpi2(1.400605991247709) $0;\\ngpi(0.19643744993651957) $1;\\ngpi2(2.484542898569882) $0;\\ngpi2(4.712388983674969) $1;\\ngpi(5.198178190362037) $0;\\nms(3.1993454810636757, 5.296333522038033, 1.5707950073511068) $0, $3;\\ngpi(0.028872294397531945) $0;\\ngpi(5.004030511044852) $3;\\ngpi2(5.7367489131543437e-05) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 0, 1, 1],\n       [1, 0, 1, 1],\n       [0, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'1001': 81, '0000': 68, '1000': 65, '0010': 65, '1011': 65, '0011': 63, '1010': 54, '0001': 45, '1110': 2, '1101': 2, '0100': 1, '0111': 1}), measurement_probabilities={'0000': 0.1328125, '1000': 0.126953125, '0100': 0.001953125, '0010': 0.126953125, '1010': 0.10546875, '1110': 0.00390625, '0001': 0.087890625, '1001': 0.158203125, '1101': 0.00390625, '0011': 0.123046875, '1011': 0.126953125, '0111': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"