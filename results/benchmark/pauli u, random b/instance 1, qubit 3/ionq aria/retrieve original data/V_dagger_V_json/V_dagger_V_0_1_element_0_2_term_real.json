"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/af7f91c5-6b2b-40c0-a380-1bf121fec0be', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:29:41.396Z', endedAt='2025-03-06T15:36:48.383Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi2(3.144004762490443) $0;\\ngpi2(5.6364579803950425) $1;\\ngpi(1.1767895952967973) $2;\\ngpi2(1.9756566403529254) $3;\\ngpi(1.3686468000342127) $1;\\ngpi2(2.3535791800674497) $2;\\ngpi2(0.4943661728362474) $3;\\nms(4.95481725588115, 0.7827827999806215, 0.6240518997968563) $1, $2;\\ngpi2(0.4943661995358421) $3;\\ngpi(1.2732520672367527) $1;\\ngpi(5.576319637213996) $2;\\nms(3.146084966907413, 2.5158370562582117, 1.5707963255671777) $0, $2;\\ngpi(0.9671098223424615) $0;\\ngpi(0.47251247921370876) $2;\\ngpi2(3.5006724964589284) $0;\\ngpi2(1.6079193245649872) $0;\\nms(0.03212743253740477, 3.8745165106354587, 1.570796326786632) $0, $1;\\ngpi2(4.390230194970307) $0;\\ngpi(5.067496874591696) $1;\\ngpi2(6.091321638565731) $0;\\ngpi2(4.689897962247531) $1;\\ngpi2(4.431222774383841) $0;\\nms(1.3037545834190392, 1.6241446233778776, 0.2437526516760542) $0, $3;\\ngpi2(0.9252838270149092) $0;\\nms(4.199126346084725, 4.7657372725745075, 1.345602268075905) $0, $3;\\ngpi(3.7722567982328314) $0;\\ngpi(4.739063141561527) $3;\\ngpi2(4.57747432157562) $0;\\ngpi2(1.5707962636387194) $3;\\ngpi2(1.1922046910148216) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 0, 1, 1],\n       [1, 0, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0001': 78, '0010': 72, '0011': 67, '1010': 65, '1000': 62, '1011': 58, '0000': 56, '1001': 46, '0100': 2, '1100': 2, '0101': 2, '1110': 1, '1111': 1}), measurement_probabilities={'0000': 0.109375, '1000': 0.12109375, '0100': 0.00390625, '1100': 0.00390625, '0010': 0.140625, '1010': 0.126953125, '1110': 0.001953125, '0001': 0.15234375, '1001': 0.08984375, '0101': 0.00390625, '0011': 0.130859375, '1011': 0.11328125, '1111': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"