"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/d64d4afa-605a-4afb-9086-3733001c2ec0', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:29:54.736Z', endedAt='2025-03-06T15:37:10.706Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(1.0470350814119018) $0;\\ngpi2(5.310426062292018) $1;\\ngpi2(3.141591801059152) $2;\\ngpi2(5.526402978432773) $3;\\ngpi(2.593563749240979) $1;\\ngpi(2.0248278548189975) $2;\\ngpi2(3.461868176913091) $3;\\nms(1.4474977519509644, 5.620452860713678, 0.6240518674387099) $1, $2;\\ngpi(3.686156407616242) $1;\\ngpi(2.894151415242734) $2;\\nms(2.0940701683979874, 1.7386462867058614, 1.5707963267871126) $0, $2;\\ngpi2(2.7832224097453926) $1;\\ngpi(3.641011021045672) $0;\\ngpi(0.08392498239401291) $2;\\ngpi2(3.6171555564580493) $0;\\ngpi2(1.4160122648970026) $0;\\nms(6.128401275576931, 2.783222436313048, 1.5707963264040234) $0, $1;\\ngpi2(5.659853982855945) $0;\\ngpi(0.43185936581515794) $1;\\ngpi2(5.906310880503911) $0;\\ngpi2(5.934477945397835) $1;\\ngpi(2.180950654915111) $0;\\nms(2.016637588138078, 1.4580661930856271, 1.3268215193207311e-08) $0, $3;\\ngpi2(4.238369944543134) $0;\\ngpi2(4.8299820434730085) $3;\\ngpi2(4.791088442134055) $0;\\ngpi2(3.624896103656208) $0;\\nms(4.114280167679423, 3.617097102629117, 1.5707963221705024) $0, $3;\\ngpi(5.198732736693244) $0;\\ngpi(5.7355393686371725) $3;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 0, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0001': 80, '0010': 79, '1011': 75, '0000': 73, '1000': 66, '0011': 47, '1010': 44, '1001': 41, '0110': 2, '1111': 2, '1110': 1, '0101': 1, '1101': 1}), measurement_probabilities={'0000': 0.142578125, '1000': 0.12890625, '0010': 0.154296875, '1010': 0.0859375, '0110': 0.00390625, '1110': 0.001953125, '0001': 0.15625, '1001': 0.080078125, '0101': 0.001953125, '1101': 0.001953125, '0011': 0.091796875, '1011': 0.146484375, '1111': 0.00390625}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"