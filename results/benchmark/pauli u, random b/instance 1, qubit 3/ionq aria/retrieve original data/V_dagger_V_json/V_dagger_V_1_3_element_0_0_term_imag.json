"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/c168549c-d107-4e5b-bbf5-2e3d2516764a', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:47:39.081Z', endedAt='2025-03-06T15:56:38.955Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi2(3.1415926607832954) $0;\\ngpi(0.24893896332946056) $1;\\ngpi2(0.5937697657375096) $2;\\ngpi(4.740246432163203) $3;\\ngpi2(5.83904778816337) $1;\\ngpi(5.3545731220534485) $2;\\ngpi2(2.792455084064114) $3;\\nms(4.268251441239312, 5.402987485871913, 0.6240518571786913) $1, $2;\\ngpi2(4.363191846301861) $3;\\nms(6.283185296537667, 2.2613949369859654, 1.5707963266464844) $0, $2;\\ngpi2(0.8667175073411811) $1;\\ngpi2(1.2640006631409064) $0;\\ngpi2(0.6905986289286277) $2;\\ngpi2(1.582471265970687) $0;\\ngpi(3.7837769261705607) $2;\\ngpi2(6.000651887565224) $0;\\nms(2.7750766729269474, 2.4450745551466535, 1.5707961207809245) $0, $1;\\ngpi(1.172454437988721) $0;\\ngpi(1.4065882903990776) $1;\\ngpi2(6.106088042126438) $0;\\ngpi2(5.029962853390012) $1;\\ngpi2(2.96520652389338) $0;\\ngpi2(4.7695348795472565) $1;\\nms(2.712731881608404, 3.323019825654517, 1.570796326655834) $0, $3;\\ngpi2(5.35506329794766) $0;\\ngpi(2.4469014980840167) $3;\\ngpi2(0.7881219776149448) $0;\\ngpi2(1.5712996798326548) $3;\\ngpi2(5.231481934827096) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [0, 0, 1, 1],\n       [1, 0, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0001': 82, '1101': 80, '1001': 67, '0100': 66, '0000': 63, '0101': 54, '1100': 52, '1000': 42, '1010': 2, '0011': 2, '1011': 1, '1111': 1}), measurement_probabilities={'0000': 0.123046875, '1000': 0.08203125, '0100': 0.12890625, '1100': 0.1015625, '1010': 0.00390625, '0001': 0.16015625, '1001': 0.130859375, '0101': 0.10546875, '1101': 0.15625, '0011': 0.00390625, '1011': 0.001953125, '1111': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"