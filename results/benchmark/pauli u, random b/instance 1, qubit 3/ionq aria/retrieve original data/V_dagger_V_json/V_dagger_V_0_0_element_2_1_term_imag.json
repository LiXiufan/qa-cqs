"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/7096454c-3ee5-42e0-9be7-09e5a77f2eed', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:27:59.249Z', endedAt='2025-03-06T15:35:09.647Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi2(0.6442234033609002) $0;\\ngpi(1.2799126103508554) $1;\\ngpi2(3.1415933869428248) $2;\\ngpi(0.10219168517169396) $3;\\ngpi2(5.750354375787332) $0;\\ngpi2(2.0907717018160885) $1;\\ngpi(1.3362316029099155) $2;\\ngpi2(1.3703192953565075) $3;\\ngpi2(0.565702361905447) $0;\\nms(3.661568048088953, 4.243258825825461, 0.6240518673180769) $1, $2;\\ngpi2(1.9008431064814855) $3;\\ngpi2(2.090771719977034) $1;\\ngpi(3.4588841737619553) $2;\\ngpi(5.211222130792469) $1;\\ngpi2(4.861852221633318) $2;\\nms(2.876660276866913, 0.14946349472387546, 1.570795428367885) $0, $2;\\ngpi2(1.3039758363257528) $0;\\ngpi2(4.556887931782129) $2;\\ngpi2(2.1634359734390385) $0;\\ngpi2(3.7334479479399527) $2;\\ngpi2(2.1487618139354714) $0;\\ngpi2(4.8054759790839485) $2;\\ngpi2(2.0425774642648995) $0;\\ngpi2(6.206748781844098) $2;\\nms(3.5998520082899685, 1.900843037082981, 1.570796326318085) $0, $3;\\ngpi2(1.2835408794916388) $2;\\ngpi(0.2291296813851579) $0;\\ngpi(1.6935160170830543) $3;\\ngpi(4.670085318217005) $3;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [1, 0, 0, 0],\n       [0, 1, 0, 0],\n       ...,\n       [1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0111': 78, '1101': 70, '0100': 68, '0101': 66, '1100': 59, '1111': 59, '1110': 53, '0110': 51, '0000': 1, '1000': 1, '0010': 1, '1010': 1, '0001': 1, '1001': 1, '0011': 1, '1011': 1}), measurement_probabilities={'0000': 0.001953125, '1000': 0.001953125, '0100': 0.1328125, '1100': 0.115234375, '0010': 0.001953125, '1010': 0.001953125, '0110': 0.099609375, '1110': 0.103515625, '0001': 0.001953125, '1001': 0.001953125, '0101': 0.12890625, '1101': 0.13671875, '0011': 0.001953125, '1011': 0.001953125, '0111': 0.15234375, '1111': 0.115234375}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"