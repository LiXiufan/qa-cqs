"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/6130c4ae-7fbc-49a2-9d8b-c9498143c199', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:50:15.428Z', endedAt='2025-03-06T15:59:31.697Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(1.1848590954178106) $0;\\ngpi2(2.517540672323383) $1;\\ngpi(5.8141612794102775) $2;\\ngpi2(5.1172493517947135) $3;\\ngpi(5.079718142223042) $1;\\ngpi2(2.203544571944946) $2;\\ngpi(3.0787609574849335) $3;\\nms(6.071099267699015, 3.7743408604630817, 0.6240518547918246) $1, $2;\\ngpi(2.0725905909756133) $1;\\ngpi(2.438349214940863) $2;\\nms(5.511310959174486, 5.814746437681134, 1.5707961051003965) $0, $2;\\ngpi(0.18308398077244548) $0;\\ngpi(2.121975092736865) $2;\\ngpi2(1.1380467567863315) $0;\\nms(1.1380530084807772, 5.928063551082402, 1.570796326785839) $0, $1;\\ngpi2(5.304892144174721) $0;\\ngpi(6.105624428780712) $1;\\ngpi2(5.273837076742806) $0;\\ngpi2(0.01611216606344221) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0110': 77, '1001': 76, '0000': 65, '0111': 64, '0001': 60, '1000': 54, '1111': 50, '1110': 45, '0011': 4, '1011': 4, '1100': 3, '0010': 3, '1101': 3, '0101': 2, '0100': 1, '1010': 1}), measurement_probabilities={'0000': 0.126953125, '1000': 0.10546875, '0100': 0.001953125, '1100': 0.005859375, '0010': 0.005859375, '1010': 0.001953125, '0110': 0.150390625, '1110': 0.087890625, '0001': 0.1171875, '1001': 0.1484375, '0101': 0.00390625, '1101': 0.005859375, '0011': 0.0078125, '1011': 0.0078125, '0111': 0.125, '1111': 0.09765625}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"