"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/363ad6ab-b2db-4f29-8bf8-54175006a5b9', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:31:00.473Z', endedAt='2025-03-06T15:38:08.377Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(3.1921023514669855) $1;\\ngpi(2.6611361045525244) $2;\\ngpi(1.3432425568137623) $3;\\ngpi2(0.7250713019811192) $1;\\ngpi2(1.9296654938822173) $2;\\ngpi2(0.710828504659113) $3;\\nms(2.2958676234852073, 0.35886917431677556, 0.6240518699761639) $1, $2;\\ngpi2(0.1803047332485317) $3;\\ngpi(5.213428062171239) $1;\\ngpi2(5.071258182155737) $2;\\ngpi2(4.035145289934334) $1;\\ngpi(1.875737952049546) $2;\\nms(3.141592911556167, 5.605942774325762, 1.570796326589706) $0, $1;\\ngpi(4.485209602623924) $0;\\ngpi(6.252842195259352) $1;\\ngpi2(1.1164372225117867) $0;\\ngpi2(2.187348919612932) $1;\\ngpi2(5.6320211209237385) $0;\\ngpi2(3.141597438798535) $1;\\nms(4.061224387508185, 0.33858305968595914, 0.6303162954993331) $0, $3;\\ngpi(5.859200620477289) $0;\\nms(1.3739915627726305, 0.14351535949814576, 0.9495699064511163) $0, $3;\\ngpi2(6.086380589428191) $0;\\ngpi2(2.7753006132870652) $3;\\ngpi2(1.5707963396153048) $0;\\ngpi2(5.916893342120782) $3;\\ngpi(2.4851997970388116) $3;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 1, 0, 1],\n       [0, 0, 1, 1],\n       [1, 0, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0001': 81, '1101': 81, '1000': 64, '1100': 59, '0100': 57, '1001': 56, '0000': 55, '0101': 54, '1110': 2, '0010': 1, '0011': 1, '1011': 1}), measurement_probabilities={'0000': 0.107421875, '1000': 0.125, '0100': 0.111328125, '1100': 0.115234375, '0010': 0.001953125, '1110': 0.00390625, '0001': 0.158203125, '1001': 0.109375, '0101': 0.10546875, '1101': 0.158203125, '0011': 0.001953125, '1011': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"