"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/d11c18fe-ae0a-4948-b281-e31422a59770', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:48:36.348Z', endedAt='2025-03-06T15:57:51.657Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(4.4771175826863105) $0;\\ngpi(5.275207897745887) $1;\\ngpi2(3.1415926691406217) $2;\\ngpi2(5.117249078189147) $3;\\ngpi2(4.2418462275454285) $0;\\ngpi2(2.6220370556502077) $1;\\ngpi(5.236334800531856) $2;\\ngpi2(2.43698671078048) $0;\\nms(1.0512407219388995, 2.6186879539903916, 0.6240518674406736) $1, $2;\\ngpi(2.4456411669289184) $1;\\ngpi(5.53769321384443) $2;\\ngpi2(5.410837955566152) $1;\\ngpi2(1.2192625934680859) $2;\\nms(0.8661904559704705, 5.931651587767215, 1.57079632679467) $0, $2;\\ngpi(1.819556375247685) $0;\\ngpi(3.442951063123738) $2;\\ngpi2(1.7850446450869772) $0;\\ngpi2(2.5250468878503707) $2;\\nms(2.8293136791373, 1.4451325149438112, 0.6084197816349155) $0, $3;\\ngpi2(1.5707963310446118) $2;\\ngpi(2.9941457063969033) $0;\\ngpi2(1.0935218895286187) $0;\\ngpi2(3.2270674476043313) $0;\\nms(0.11196157061332457, 4.586725243785018, 1.4120182102351926) $0, $3;\\ngpi2(0.538607702735102) $0;\\ngpi(6.22035336085604) $3;\\ngpi2(4.077569815533624) $0;\\ngpi2(1.570796229056096) $3;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [0, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0011': 87, '1010': 70, '1001': 70, '0000': 65, '0001': 60, '1000': 55, '0010': 55, '1011': 44, '0100': 2, '1111': 2, '1101': 1, '0111': 1}), measurement_probabilities={'0000': 0.126953125, '1000': 0.107421875, '0100': 0.00390625, '0010': 0.107421875, '1010': 0.13671875, '0001': 0.1171875, '1001': 0.13671875, '1101': 0.001953125, '0011': 0.169921875, '1011': 0.0859375, '0111': 0.001953125, '1111': 0.00390625}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"