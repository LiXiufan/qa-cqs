"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/3e943416-c475-455f-b640-28d8dbfc09ab', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:46:36.230Z', endedAt='2025-03-06T15:55:08.649Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(5.005625467157825) $1;\\ngpi(4.019617941723801) $2;\\ngpi(3.078760922541554) $3;\\ngpi2(5.919483734826926) $1;\\ngpi2(0.07700419632716078) $2;\\ngpi2(1.040272519208175) $3;\\ngpi2(1.2070947749455505) $1;\\ngpi(4.863252243803954) $2;\\ngpi(0.14916888981843887) $1;\\nms(5.3744284002898155, 4.937111234385313, 0.624051877716008) $1, $2;\\ngpi2(4.995954920106692) $1;\\ngpi2(5.991675362328932) $2;\\nms(3.1415926512689367, 5.889856871764163, 1.4504930890303829) $0, $2;\\ngpi(2.17460720937329) $0;\\ngpi(4.175136505656706) $2;\\ngpi2(5.589747577406426) $2;\\ngpi2(1.0867785388233144) $2;\\nms(1.2076217218597423, 1.1283753880236533, 0.5260397797231038) $0, $2;\\ngpi2(5.9003667183508846) $0;\\ngpi(1.4777640352615793) $2;\\ngpi2(5.961535749871541) $0;\\ngpi2(1.8121769707852629) $2;\\ngpi(5.613536591118285) $0;\\nms(0.5751547696447743, 0.2841306032878279, 1.5707963256091664) $0, $1;\\ngpi2(5.023103675819561) $0;\\ngpi2(0.5552707674214437) $1;\\ngpi2(4.959720437377891) $0;\\ngpi2(5.365413272361552) $1;\\ngpi2(3.1227450447445464) $0;\\ngpi2(3.4291114065710073) $1;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 1, 1, 1],\n       [1, 1, 1, 1],\n       [1, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0000': 80, '0001': 78, '1110': 75, '1000': 64, '1001': 57, '1111': 51, '0111': 49, '0110': 44, '1011': 4, '1010': 3, '0100': 2, '0101': 2, '1100': 1, '0010': 1, '1101': 1}), measurement_probabilities={'0000': 0.15625, '1000': 0.125, '0100': 0.00390625, '1100': 0.001953125, '0010': 0.001953125, '1010': 0.005859375, '0110': 0.0859375, '1110': 0.146484375, '0001': 0.15234375, '1001': 0.111328125, '0101': 0.00390625, '1101': 0.001953125, '1011': 0.0078125, '0111': 0.095703125, '1111': 0.099609375}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"