"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/a5a1252e-d1a7-44c5-b56d-dc6da43ebd86', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:47:07.746Z', endedAt='2025-03-06T15:55:52.759Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi2(1.5707964148527207) $0;\\ngpi2(1.6249889080373852) $1;\\ngpi2(4.712388932654411) $2;\\ngpi2(5.117249323461622) $3;\\ngpi2(3.618643573654394) $0;\\ngpi(4.1846779027736085) $1;\\ngpi(1.3041044626293774) $2;\\ngpi(3.152626092341601) $3;\\nms(2.0319779182607682, 2.60820898009516, 0.6240518674440417) $1, $2;\\ngpi2(2.0319782517448437) $1;\\ngpi(1.411916803354663) $2;\\ngpi(0.5631720563576553) $1;\\ngpi2(1.1698751768821625) $2;\\nms(5.189439953643855, 2.7406715806054227, 1.5707963135552268) $0, $2;\\ngpi2(3.3974381306275436) $0;\\ngpi(0.10781230166178979) $2;\\ngpi2(3.397438011016029) $0;\\ngpi2(2.187342070947366) $2;\\nms(4.747028904903169, 5.377551182722674, 1.570796293820417) $0, $1;\\ngpi2(3.1415926058854757) $2;\\ngpi2(6.165301265959783) $0;\\ngpi(4.59869417217421) $1;\\ngpi2(5.066808769915234) $0;\\ngpi2(2.2490407379193282) $1;\\ngpi2(0.2846011669661852) $0;\\nms(0.1488850535535562, 1.7185266152865246, 1.5707963206244644) $0, $3;\\ngpi(4.786831514471168) $0;\\ngpi2(4.860119283382388) $3;\\ngpi(1.644661476194198) $3;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 0, 1, 1],\n       [1, 0, 1, 1],\n       [1, 0, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'1000': 83, '0010': 81, '0001': 61, '0011': 61, '0000': 57, '1010': 57, '1001': 57, '1011': 48, '0100': 3, '1100': 3, '0101': 1}), measurement_probabilities={'0000': 0.111328125, '1000': 0.162109375, '0100': 0.005859375, '1100': 0.005859375, '0010': 0.158203125, '1010': 0.111328125, '0001': 0.119140625, '1001': 0.111328125, '0101': 0.001953125, '0011': 0.119140625, '1011': 0.09375}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"