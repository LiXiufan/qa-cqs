"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/7d517aaa-834d-4e21-bca6-ff315f7ae5d7', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:37:51.839Z', endedAt='2025-03-06T15:45:39.144Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(0.8168461707834852) $0;\\ngpi2(2.5175407736727218) $1;\\ngpi2(5.238728420111495) $2;\\ngpi2(5.117249312934227) $3;\\ngpi(5.119268026425616) $0;\\ngpi(0.13186383113031291) $1;\\ngpi(4.992084800379942) $2;\\ngpi(3.9359131645293295) $3;\\nms(5.600168512690449, 3.174644878737363, 0.6240517612933186) $1, $2;\\ngpi2(4.64591794470368) $1;\\ngpi2(1.6038485049612132) $2;\\nms(5.463251057351761, 3.0751216475410077, 1.5707963235818274) $0, $1;\\ngpi(1.0650939609688004) $2;\\ngpi(4.692791662716751) $0;\\ngpi2(2.567096653023444) $1;\\ngpi2(1.9511572560484673) $0;\\ngpi2(4.7394292177578405) $1;\\ngpi2(2.6319890778559527) $0;\\ngpi2(5.516685305112444) $1;\\nms(4.239156504775172, 3.285100744669095, 1.2172502035165365) $0, $3;\\ngpi(4.406375062164543) $0;\\ngpi(3.5647253768830938) $3;\\ngpi2(5.391752837252499) $0;\\nms(1.7607024510588511, 0.7027573601928928, 0.5489894102592601) $0, $3;\\ngpi(1.4934695021953037) $0;\\ngpi(5.849165766445507) $3;\\ngpi2(1.627886137196934) $0;\\ngpi2(1.5707962577792525) $3;\\ngpi2(2.5748472249405934) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 1, 0, 1],\n       [1, 1, 0, 1],\n       [0, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'1100': 80, '1001': 73, '0101': 70, '1101': 67, '0000': 66, '0001': 57, '1000': 49, '0100': 47, '0110': 2, '0111': 1}), measurement_probabilities={'0000': 0.12890625, '1000': 0.095703125, '0100': 0.091796875, '1100': 0.15625, '0110': 0.00390625, '0001': 0.111328125, '1001': 0.142578125, '0101': 0.13671875, '1101': 0.130859375, '0111': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"