"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/53dcf9ab-db18-4b57-a2ab-8a7ba8cf287e', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T14:43:06.497Z', endedAt='2025-03-06T15:51:39.674Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(5.478896121944209) $0;\\ngpi(0.34925601351876867) $1;\\ngpi(2.6691136497862145) $2;\\ngpi2(0.38499305110387233) $3;\\nms(5.094060387820454, 0.3438626419774506, 2.392743146928761e-13) $1, $2;\\ngpi2(5.163230939862448) $3;\\ngpi(5.929199654945407) $1;\\ngpi(3.357944809891367) $2;\\ngpi2(2.4941891443164406) $1;\\ngpi(0.5322136644320763) $2;\\ngpi(0.3678645749612617) $1;\\ngpi2(2.8842785508688316) $2;\\nms(6.0955220134324675, 1.3135326622494965, 0.6240518169090058) $1, $2;\\ngpi2(4.5247247291262935) $1;\\ngpi(4.435618664663218) $2;\\ngpi2(6.092898040683007) $2;\\nms(1.5330142984156976, 1.3243493321177393, 1.5707963267948966) $0, $2;\\ngpi2(0.07756283511485851) $0;\\ngpi2(0.537521738740154) $2;\\ngpi2(0.7400225688844078) $0;\\ngpi2(0.6870529672489587) $2;\\ngpi2(5.5435114376387356) $0;\\ngpi2(6.177800063986072) $2;\\nms(5.614200679609566, 6.209469150966708, 1.5707963255013135) $0, $3;\\ngpi2(6.207121329075236) $0;\\ngpi2(4.642435984259011) $3;\\ngpi2(1.903241900725889) $0;\\ngpi2(3.1387351104158427) $3;\\ngpi2(0.865078617175585) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 0, 1, 1],\n       [1, 0, 1, 1],\n       [0, 1, 1, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'0010': 81, '1011': 71, '0001': 69, '1001': 65, '0000': 63, '1010': 56, '1000': 51, '0011': 51, '1100': 3, '0101': 1, '0111': 1}), measurement_probabilities={'0000': 0.123046875, '1000': 0.099609375, '1100': 0.005859375, '0010': 0.158203125, '1010': 0.109375, '0001': 0.134765625, '1001': 0.126953125, '0101': 0.001953125, '0011': 0.099609375, '1011': 0.138671875, '0111': 0.001953125}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"