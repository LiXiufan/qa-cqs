"GateModelQuantumTaskResult(task_metadata=TaskMetadata(braketSchemaHeader=BraketSchemaHeader(name='braket.task_result.task_metadata', version='1'), id='arn:aws:braket:us-east-1:225989338317:quantum-task/30e1d7b6-7537-44fa-adc3-e5c73fd02b97', shots=512, deviceId='arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1', deviceParameters=IonqDeviceParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.ionq.ionq_device_parameters', version='1'), paradigmParameters=GateModelParameters(braketSchemaHeader=BraketSchemaHeader(name='braket.device_schema.gate_model_parameters', version='1'), qubitCount=4, disableQubitRewiring=True), errorMitigation=None), createdAt='2025-03-06T15:00:32.706Z', endedAt='2025-03-06T16:13:09.394Z', status='COMPLETED', failureReason=None), additional_metadata=AdditionalMetadata(action=Program(braketSchemaHeader=BraketSchemaHeader(name='braket.ir.openqasm.program', version='1'), source='OPENQASM 3.0;\\nbit[4] b;\\n#pragma braket verbatim\\nbox{\\ngpi(0.9495997212428403) $0;\\ngpi(5.380824402242642) $1;\\ngpi2(5.329521096478841) $2;\\ngpi2(0.3919853431160858) $3;\\ngpi2(0.39012627058096777) $1;\\ngpi(2.530575915300714) $2;\\ngpi2(1.952454848950064) $3;\\nms(1.9609225225484193, 4.444019725185366, 0.6240518672239941) $1, $2;\\nms(5.034790531120634, 1.301120922815501, 1.570795936545644) $0, $2;\\ngpi(4.505514332255449) $1;\\ngpi(5.022157697091604) $0;\\ngpi2(5.7849946857849845) $1;\\ngpi2(2.870626361917405) $2;\\ngpi2(3.433340685824193) $0;\\ngpi(0.9590896918275185) $2;\\ngpi2(1.1536863176402576) $0;\\nms(2.7296061651339807, 1.0726055822056757, 1.5707963267948966) $0, $1;\\ngpi(6.2791871788592015) $0;\\ngpi(6.186932360745367) $1;\\ngpi2(1.974795475528291) $0;\\ngpi2(0.3056848716583982) $1;\\ngpi2(4.138725470170886) $0;\\ngpi2(1.5707962823047446) $1;\\nms(5.710918285428333, 0.9066536839792964, 1.570796324163103) $0, $3;\\ngpi2(1.1344385189097999) $0;\\ngpi(2.812439000276745) $3;\\ngpi2(1.4048477232286807) $0;\\ngpi2(4.717797270927366) $3;\\ngpi2(6.246722524559374) $0;\\n}\\nb[0] = measure $0;\\nb[1] = measure $1;\\nb[2] = measure $2;\\nb[3] = measure $3;', inputs={}), dwaveMetadata=None, ionqMetadata=None, rigettiMetadata=None, oqcMetadata=None, xanaduMetadata=None, queraMetadata=None, simulatorMetadata=None, iqmMetadata=None), result_types=[], values=[], measurements=array([[0, 0, 0, 0],\n       [0, 0, 0, 0],\n       [0, 0, 0, 0],\n       ...,\n       [1, 1, 0, 1],\n       [1, 1, 0, 1],\n       [1, 1, 0, 1]]), measured_qubits=[0, 1, 2, 3], measurement_counts=Counter({'1100': 88, '1101': 87, '0100': 75, '0001': 66, '1000': 56, '0000': 54, '0101': 43, '1001': 36, '1110': 4, '0110': 3}), measurement_probabilities={'0000': 0.10546875, '1000': 0.109375, '0100': 0.146484375, '1100': 0.171875, '0110': 0.005859375, '1110': 0.0078125, '0001': 0.12890625, '1001': 0.0703125, '0101': 0.083984375, '1101': 0.169921875}, measurements_copied_from_device=False, measurement_counts_copied_from_device=False, measurement_probabilities_copied_from_device=True, _result_types_indices={})"